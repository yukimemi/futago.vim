---
name: futago
description: Google gemini chat for vim.
---

=pod

=head1 futago.vim

Google gemini chat for Vim / Neovim.

![futago](https://github.com/yukimemi/futago.vim/assets/6442108/29e371e3-c16e-4b94-8a0c-67a37e26f7b5)

=head1 Features X<futago-features>

This plugin is a Google gemini chat for Vim / Neovim.

=head1 Installation X<futago-installation>

If you use L<folke/lazy.nvim|https://github.com/folke/lazy.nvim>.

=begin lua

{
  "yukimemi/futago.vim",
  lazy = false,
  dependencies = {
    "vim-denops/denops.vim",
  },
}

=end lua

If you use L<yukimemi/dvpm|https://github.com/yukimemi/dvpm>.

=begin typescript

dvpm.add({ url: "yukimemi/futago.vim" });

=end typescript

=head1 Requirements X<futago-requirements>

=item [Deno - A modern runtime for JavaScript and TypeScript](https://deno.land/)

=item [vim-denops/denops.vim: üêú An ecosystem of Vim/Neovim which allows developers to write cross-platform plugins in Deno](https://github.com/vim-denops/denops.vim)

Using Deno.KV, you need the `--unstable-kv` flag.
Please specify as below.

=begin vim

let g:denops#server#deno_args = ['-q', '--no-lock', '--unstable-kv', '-A']

=end vim

=item Environment: `GEMINI_API_KEY`

[Get API key](https://ai.google.dev/)

=head1 Usage X<futago-usage>

=head1 Commands X<futago-commands>

C<:FutagoHistory>                                               X<:FutagoHistory>

Show list of chat history with quickfix.
If you open a past chat file, you can start chatting based on the automatically saved history.

=head1 Config X<futago-config>

No settings are required. However, the following settings can be made if necessary.

C<g:futago_debug>                                               X<g:futago_debug>
Enable debug messages.
Default is v:false

C<g:futago_chat_path>                                       X<g:futago_chat_path>
Path to save chat files.
Default is `xdg.cache()/futago/chat`

https://deno.land/x/xdg/src/mod.deno.ts

If you open a past chat file saved in g:futago_chat_path, you can start chatting based on the automatically saved chat history.

C<g:futago_log_file>                                         X<g:futago_log_file>
Path to save log files.
Default is `xdg.cache()/futago/log`

https://deno.land/x/xdg/src/mod.deno.ts

C<g:futago_history_db>                                     X<g:futago_history_db>
Path to save history db (Deno KV).
Default is `xdg.cache()/futago/db/history.db`

https://deno.land/x/xdg/src/mod.deno.ts

C<g:futago_safety_settings>                           X<g:futago_safety_settings>

[SafetySetting](https://ai.google.dev/api/rest/v1beta/SafetySetting)
Default is no setting.

C<g:futago_generation_config>                       X<g:futago_generation_config>

[GenerationConfig](https://ai.google.dev/api/rest/v1beta/GenerationConfig)
Default is no setting.

C<g:futago_ai_prompt>                                       X<g:futago_ai_prompt>
AI prompt.
Default is `Gemini`.

C<g:futago_human_prompt>                                 X<g:futago_human_prompt>
Human prompt.
Default is `You`.

C<g:futago_opener>                                             X<g:futago_opener>
Options are "split", "vsplit", "tabnew", "edit", "new", "vnew".
Default is "tabnew".


=head1 Functions X<futago-functions>

C<futago#start_chat([params])>                               X<futago#start_chat>

Start Futago chat with params.
params is dictionaly.

=item [opener]: Default is "tabnew".

Options are "split", "vsplit", "tabnew", "edit", "new", "vnew".

=item [history]: List of chat history.

example:
[{"role": "user", "parts": "user prompt"}, {"role": "model", "parts": "model reply"}]]

[Content[]](https://ai.google.dev/api/rest/v1beta/Content)

=item [safetySettings]: Default is no setting.

[SafetySetting](https://ai.google.dev/api/rest/v1beta/SafetySetting)

=item [generationConfig]: Default is no setting.

[GenerationConfig](https://ai.google.dev/api/rest/v1beta/GenerationConfig)

=item [aiPrompt]: Default is `Gemini`.

=item [humanPrompt]: Default is `You`.

=head1 Example X<futago-example>

=begin vim

let g:futago_debug = v:true
let g:futago_chat_path = '~/.cache/vim/futago/chat'
let g:futago_log_file = '~/.cache/vim/futago/log/futago.log'
let g:futago_history_db = '~/.cache/vim/futago/db/history.db'
let g:futago_safety_settings = [
  \ { "category": "HARM_CATEGORY_HATE_SPEECH", "threshold": "BLOCK_NONE" },
  \ { "category": "HARM_CATEGORY_SEXUALLY_EXPLICIT", "threshold": "BLOCK_NONE"  },
  \ { "category": "HARM_CATEGORY_HARASSMENT", "threshold": "BLOCK_ONLY_HIGH" },
  \ { "category": "HARM_CATEGORY_DANGEROUS_CONTENT", "threshold": "BLOCK_MEDIUM_AND_ABOVE" },
  \ ]
let g:futago_generation_config = {
  \   "temperature": 0.9,
  \   "maxOutputTokens": 256,
  \ }
nnoremap <Leader>fc <Cmd>call futago#start_chat({
  \ "opener": "vsplit",
  \ "history": [
  \   {"role": "user", "parts": "ÂÉï„ÅÆÂêçÂâç„ÅØ yukimemi"},
  \   {"role": "model", "parts": "‰∫ÜËß£ÔºÅË¶ö„Åà„Å¶„Åä„Åè„Å≠"}
  \ ],
  \ "humanPrompt": "yukimemi"
  \ })<cr>

=end vim

=head1 License X<futago-license>

Licensed under MIT License.

Copyright (c) 2023 yukimemi

=cut
