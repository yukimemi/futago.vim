*futago.txt*                                      Google gemini chat for vim.
=============================================================================
futago.vim~

Google gemini chat for Vim / Neovim.

![futago](https://github.com/yukimemi/futago.vim/assets/6442108/2a9f13c1-a66f-4170-aba3-e44a417ef5f7)

=============================================================================
Features ~
                                                            *futago-features*

This plugin is a Google gemini chat for Vim / Neovim.

=============================================================================
Installation ~
                                                        *futago-installation*

If you use folke/lazy.nvim |https://github.com/folke/lazy.nvim|.

>
	{
	  "yukimemi/futago.vim",
	  lazy = false,
	  dependencies = {
	    "vim-denops/denops.vim",
	  },
	}
<

If you use yukimemi/dvpm |https://github.com/yukimemi/dvpm|.

>
	dvpm.add({ url: "yukimemi/futago.vim" });
<

=============================================================================
Requirements ~
                                                        *futago-requirements*

- [Deno - A modern runtime for JavaScript and TypeScript](https://deno.land/)
- [vim-denops/denops.vim: üêú An ecosystem of Vim/Neovim which allows developers to write cross-platform plugins in Deno](https://github.com/vim-denops/denops.vim)
- Environment: `GEMINI_API_KEY`
[Get API key](https://ai.google.dev/)

=============================================================================
Usage ~
                                                               *futago-usage*

=============================================================================
Commands ~
                                                            *futago-commands*

`:FutagoStart [opener]`                                          *:FutagoStart*

Start Futago chat.
Enter the prompt, save buffer, and the chat will be sent.

[opener]: Optional. Default is "tabnew".

Options are "split", "vsplit", "tabnew", "edit", "new", "vnew".

`:FutagoHistory`                                               *:FutagoHistory*

Show list of chat history with quickfix.
If you open a past chat file, you can start chatting based on the automatically saved history.

=============================================================================
Config ~
                                                              *futago-config*

No settings are required. However, the following settings can be made if necessary.

`g:futago_debug`                                               *g:futago_debug*
Enable debug messages.
Default is v:false

`g:futago_chat_path`                                       *g:futago_chat_path*
Path to save chat files.
Default is `xdg.cache()/futago/chat`

https://deno.land/x/xdg/src/mod.deno.ts

If you open a past chat file saved in g:futago_chat_path, you can start chatting based on the automatically saved chat history.

`g:futago_log_file`                                         *g:futago_log_file*
Path to save log files.
Default is `xdg.cache()/futago/log`

https://deno.land/x/xdg/src/mod.deno.ts

`g:futago_history_db`                                     *g:futago_history_db*
Path to save history db (Deno KV).
Default is `xdg.cache()/futago/db/history.db`

https://deno.land/x/xdg/src/mod.deno.ts

`g:futago_safety_settings`                           *g:futago_safety_settings*

[SafetySetting](https://ai.google.dev/api/rest/v1beta/SafetySetting)
Default is no setting.

`g:futago_generation_config`                       *g:futago_generation_config*

[GenerationConfig](https://ai.google.dev/api/rest/v1beta/GenerationConfig)
Default is no setting.

=============================================================================
Functions ~
                                                           *futago-functions*

`futago#start_chat([opener], [history])`                    *futago#start_chat*

Start Futago chat with args.

[opener]: Default is "tabnew".
Options are "split", "vsplit", "tabnew", "edit", "new", "vnew".

[history]: List of chat history.

example:
[{"role": "user", "parts": "user prompt"}, {"role": "model", "parts": "model reply"}]]

=============================================================================
Example ~
                                                             *futago-example*

>
	let g:futago_debug = v:true
	let g:futago_chat_path = '~/.cache/vim/futago/chat'
	let g:futago_log_file = '~/.cache/vim/futago/log/futago.log'
	let g:futago_history_db = '~/.cache/vim/futago/db/history.db'
	let g:futago_safety_settings = [
	  \ { "category": "HARM_CATEGORY_HATE_SPEECH", "threshold": "BLOCK_NONE" },
	  \ { "category": "HARM_CATEGORY_SEXUALLY_EXPLICIT", "threshold": "BLOCK_NONE"  },
	  \ { "category": "HARM_CATEGORY_HARASSMENT", "threshold": "BLOCK_ONLY_HIGH" },
	  \ { "category": "HARM_CATEGORY_DANGEROUS_CONTENT", "threshold": "BLOCK_MEDIUM_AND_ABOVE" },
	  \ ]
	let g:futago_generation_config = {
	  \   "temperature": 0.9,
	  \   "maxOutputTokens": 256,
	  \ }
	
	nnoremap <Leader>Fc <Cmd>call futago#start_chat("vsplit", [{"role": "user", "parts": "ÂÉï„ÅÆÂêçÂâç„ÅØ yukimemi"}, {"role": "model", "parts": "‰∫ÜËß£ÔºÅË¶ö„Åà„Å¶„Åä„Åè„Å≠"}])<cr>
<

=============================================================================
License ~
                                                             *futago-license*

Licensed under MIT License.

Copyright (c) 2023 yukimemi


vim:tw=78:ts=8:noet:ft=help:norl:
